# Dashboard.py

import streamlit as st
from kafka import KafkaConsumer
import json
import pandas as pd

from config import KAFKA_CONFIG

# Thi·∫øt l·∫≠p Kafka Consumer
consumer = KafkaConsumer(
    'video_predictions',  # topic ƒë·ªÉ l·∫Øng nghe k·∫øt qu·∫£ d·ª± ƒëo√°n
    bootstrap_servers=KAFKA_CONFIG['bootstrap_servers'],
    value_deserializer=lambda m: json.loads(m.decode('utf-8')),
    auto_offset_reset='latest',
    enable_auto_commit=True,
    group_id='dashboard_group'
)

# C·∫•u h√¨nh giao di·ªán Streamlit
st.set_page_config(page_title="TikTok Prediction Dashboard", layout="wide")
st.title("üìä TikTok Video Growth Prediction")
st.markdown("Real-time predictions streamed from Kafka")

# Kh·ªüi t·∫°o DataFrame tr·ªëng ƒë·ªÉ l∆∞u k·∫øt qu·∫£
prediction_data = []

# Stream d·ªØ li·ªáu t·ª´ Kafka v√† c·∫≠p nh·∫≠t giao di·ªán
placeholder = st.empty()

while True:
    for message in consumer:
        try:
            result = message.value  # dict ch·ª©a k·∫øt qu·∫£
            prediction_data.append(result)

            # Hi·ªÉn th·ªã b·∫£ng
            df = pd.DataFrame(prediction_data).sort_values("timestamp", ascending=False)
            placeholder.dataframe(df.head(20), use_container_width=True)

        except Exception as e:
            st.error(f"L·ªói ƒë·ªçc d·ªØ li·ªáu Kafka: {e}")
